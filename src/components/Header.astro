---
import ToggleThemeButton from "./ThemeToggle.astro";

const navItems = [
    { name: "Home", href: "#top", label: "home" },
    { name: "Projects", href: "#projects", label: "projects" },
    { name: "About", href: "#about", label: "about" },
    { name: "Contact", href: "#contact", label: "contact" },
];
---

<header
    class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2 gap-x-10 lg:gap-x-20 py-2"
>
    <nav class="flex flex-row gap-x-5 lg:gap-x-20 opacity-80 items-center justify-center rounded-full px-5 py-2">
        <!-- Loop through navItems -->
        <!-- Each item has a name, href, and label -->
        <!-- The label is used to highlight the current page -->
        <!-- The href is used to navigate to the page -->
        <!-- The name is used to display the name of the page -->
        {navItems.map((item) => <a href={item.href}>{item.name}</a>)}
        <ToggleThemeButton />
    </nav>
</header>

<script>
    document.addEventListener("astro:page-load", () => {
        const sections = document.querySelectorAll("section");
        const navItems = document.querySelectorAll("header nav a");

        const callback = (entries: any[]) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    navItems.forEach((item) => {
                        if (
                            item.getAttribute("aria-label") == entry.target.id
                        ) {
                            item.classList.add("text-blue-500");
                        } else {
                            item.classList.remove("text-blue-500");
                        }
                    });
                }
            });
        };

        const observer = new IntersectionObserver(callback, {
            root: null,
            rootMargin: "0px",
            threshold: 0.3,
        });

        sections.forEach((section) => {
            observer.observe(section);
        });

        // Cleanup function
        document.onvisibilitychange = () => {
            if (document.visibilityState === "hidden") {
                observer.disconnect();
            } else {
                sections.forEach((section) => {
                    observer.observe(section);
                });
            }
        };
    });
</script>

<style>
    nav {
        animation: nav-shadown 1s linear both;
        animation-timeline: scroll();
        animation-range: 0 100px;
    }

    nav {
        @apply dark:bg-gray-800/90 bg-white/50;
    }

    @keyframes nav-shadown {
        0% {
            @apply dark:bg-gray-800/0 bg-white/0;
        }
        to {
            @apply shadow-lg ring-1 backdrop-blur ring-white/10;
        }
    }
</style>
